{
  "openapi": "3.1.0",
  "info": {
    "title": "PyKOS API Documentation",
    "description": "Python client for controlling robots through KOS",
    "version": "1.0.0",
    "x-readme": {
      "samples-languages": [
        "python"
      ],
      "explorer-enabled": true,
      "categories": [
        {
          "name": "Setup",
          "description": "Client initialization and setup"
        },
        {
          "name": "IMU",
          "description": "IMU sensor operations"
        },
        {
          "name": "Actuator",
          "description": "Actuator control operations"
        }
      ]
    }
  },
  "paths": {
    "/KOS.__init__": {
      "post": {
        "operationId": "initialize",
        "tags": [
          "Setup"
        ],
        "summary": "Initialize KOS Client",
        "description": "Create a new KOS client instance",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "# Connect to local KOS instance\nkos = KOS()\n\n# Connect to remote KOS instance\nkos = KOS(ip='192.168.1.100', port=50051)"
            }
          ]
        }
      }
    },
    "/imu/values": {
      "get": {
        "operationId": "get_imu_values",
        "tags": [
          "IMU"
        ],
        "summary": "Get IMU Values",
        "description": "Get the latest IMU sensor values including acceleration and angular velocity",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "values = kos.imu.get_imu_values()"
            }
          ]
        }
      }
    },
    "/imu/quaternion": {
      "get": {
        "operationId": "get_quaternion",
        "tags": [
          "IMU"
        ],
        "summary": "Get Quaternion",
        "description": "Get the latest quaternion orientation",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "quat = kos.imu.get_quaternion()"
            }
          ]
        }
      }
    },
    "/imu/zero": {
      "post": {
        "operationId": "zero_imu",
        "tags": [
          "IMU"
        ],
        "summary": "Zero IMU",
        "description": "Zero the IMU with optional parameters",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "# Basic zeroing\nkos.imu.zero()\n\n# Advanced zeroing\nkos.imu.zero(\n    duration=2.0,\n    max_retries=3,\n    max_angular_error=0.1\n)"
            }
          ]
        }
      }
    },
    "/actuator/calibrate": {
      "post": {
        "operationId": "calibrate_actuator",
        "tags": [
          "Actuator"
        ],
        "summary": "Calibrate Actuator",
        "description": "Calibrate a specific actuator",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "metadata = kos.actuator.calibrate(actuator_id=1)"
            }
          ]
        }
      }
    },
    "/actuator/command": {
      "post": {
        "operationId": "command_actuators",
        "tags": [
          "Actuator"
        ],
        "summary": "Command Actuators",
        "description": "Send commands to multiple actuators",
        "x-readme": {
          "code-samples": [
            {
              "language": "python",
              "code": "commands = [\n    {\"actuator_id\": 1, \"position\": 1.57},\n    {\"actuator_id\": 2, \"torque\": 0.5}\n]\nkos.actuator.command_actuators(commands)"
            }
          ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IMUResponse": {
        "description": "IMU service response model.",
        "properties": {
          "acceleration": {
            "description": "Acceleration values in m/s^2",
            "items": {
              "type": "number"
            },
            "title": "Acceleration",
            "type": "array"
          },
          "angular_velocity": {
            "description": "Angular velocity values in rad/s",
            "items": {
              "type": "number"
            },
            "title": "Angular Velocity",
            "type": "array"
          },
          "orientation": {
            "description": "Orientation quaternion",
            "items": {
              "type": "number"
            },
            "title": "Orientation",
            "type": "array"
          }
        },
        "required": [
          "acceleration",
          "angular_velocity",
          "orientation"
        ],
        "title": "IMUResponse",
        "type": "object"
      },
      "ActuatorResponse": {
        "description": "Actuator service response model.",
        "properties": {
          "position": {
            "description": "Current position",
            "title": "Position",
            "type": "number"
          },
          "velocity": {
            "description": "Current velocity",
            "title": "Velocity",
            "type": "number"
          },
          "torque": {
            "description": "Current torque",
            "title": "Torque",
            "type": "number"
          }
        },
        "required": [
          "position",
          "velocity",
          "torque"
        ],
        "title": "ActuatorResponse",
        "type": "object"
      },
      "CalibrationMetadata": {
        "description": "Calibration metadata model.",
        "properties": {
          "status": {
            "description": "Current calibration status",
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "CalibrationMetadata",
        "type": "object"
      }
    }
  }
}